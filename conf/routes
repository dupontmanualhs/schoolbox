# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()

# Stub 
GET     /stub						controllers.Application.stub()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

#form example
GET		/this/is/spartas/formtest				controllers.Application.formTest()
POST	/this/is/spartas/formtest				controllers.Application.formTest()

#Users
GET		/login						            controllers.Users.login()
POST    /login						          	controllers.Users.login()
GET     /choosePerspective          		  	controllers.Users.choosePerspective()
POST    /choosePerspective         				controllers.Users.choosePerspective() 
GET     /logout                     			controllers.Users.logout()
GET     /settings                  				controllers.Users.settings()
POST    /changeTheme   			                controllers.Users.changeTheme()
GET     /changePassword         			    controllers.Users.changePassword()
POST    /changePassword             			controllers.Users.changePassword()
GET     /listUsers                 				controllers.Users.list()


#Courses
# current schedules
GET	    /schedule/teacher/:username             controllers.Courses.getTeacherSchedule1(username)
GET     /schedule/student/:username             controllers.Courses.getStudentSchedule1(username)
GET 	/schedule/mySchedule					controllers.Courses.getMySchedule()
# schedules for given term
GET     /schedule/teacher/:termSlug/:username	controllers.Courses.getTeacherSchedule2(username, termSlug)
GET     /schedule/student/:termSlug/:username   controllers.Courses.getStudentSchedule2(username, termSlug)
# section classes
GET		/classes								controllers.Courses.classList()
GET		/classes/:courseId						controllers.Courses.sectionTable(courseId: Long)
# section roster
GET     /roster/:sectionId                      controllers.Courses.roster(sectionId: Long)


#Assessments
GET     /assessments                            controllers.Assessments.menu()
POST    /assessments                            controllers.Assessments.checkAnswer(temp: Int)
GET     /assessments/newQuestion                controllers.Assessments.newQuestion()

#Assignments
GET     /assignments/doTask/:taskId             controllers.Assignments.doTask(taskId: Long)
POST    /assignments/check/:taskId              controllers.Assignments.check(taskId: Long)

#Math
GET     /tatro/mastery                          controllers.Mastery.menuOfTests()     
GET 	/tatro/mastery/quiz						controllers.Mastery.displayQuiz(quizId: Long)  
#POST   /tatro/mastery/quizReport               controllers.Mastery.checkAnswers(quizName)                  
GET     /math/random                            controllers.Math.randomProblem()
POST    /math/random                            controllers.Math.checkAnswer(temp)

#Books
GET     /books/addTitle                         controllers.Books.addTitle()
POST    /books/addTitle                         controllers.Books.addTitle()
GET     /books/findCopyHistory                  controllers.Books.findCopyHistory
POST    /books/findCopyHistory                  controllers.Books.findCopyHistory
GET     /books/findCurrentCheckouts             controllers.Books.findCurrentCheckouts
POST    /books/findCurrentCheckouts             controllers.Books.findCurrentCheckouts
GET     /books/copyHistory/:barcode             controllers.Books.copyHistory(barcode: String)
POST    /books/checkoutHistory/:studentId       controllers.Books.checkoutHistory(studentId: String)
GET     /books/currentCheckouts/:studentId      controllers.Books.currentCheckouts(studentId: String)
GET     /books/checkoutHistory/:studentId       controllers.Books.checkoutHistory(studentId: String)
GET     /books/findCheckoutHistory              controllers.Books.findCheckoutHistory
POST    /books/findCheckoutHistory              controllers.Books.findCheckoutHistory
GET     /books/checkout                         controllers.Books.checkout()
POST    /books/checkout                         controllers.Books.checkout()
GET     /books/checkIn                          controllers.Books.checkIn()
POST    /books/checkIn                          controllers.Books.checkIn()
GET     /books/allBooksOut/:grade               controllers.Books.allBooksOut(grade: Int)
GET     /books/findAllBooksOut                  controllers.Books.findAllBooksOut
POST    /books/findAllBooksOut                  controllers.Books.findAllBooksOut

#Lockers
GET     /lockers/myLocker                       controllers.Lockers.getMyLocker()
GET     /lockers/locker/:lockerNum              controllers.Lockers.getLocker(lockerNum: Int)
POST    /lockers/locker/:lockerNum              controllers.Lockers.getLocker(lockerNum: Int)
GET     /lockers/lockerByNumber                 controllers.Lockers.lockerByNumber()
POST    /lockers/lockerByNumber                 controllers.Lockers.lockerByNumber()
GET     /lockers/lockerSearch                   controllers.Lockers.lockerSearch()
POST    /lockers/lockerSearch                   controllers.Lockers.lockerSearch()
GET     /lockers/schedule                       controllers.Lockers.schedule()
GET     /lockers/lockerByRoom/:room             controllers.Lockers.lockerByRoom(room: String)

#Conferences
GET		/conferences							controllers.Conferences.index()
GET		/conferences/teacher 					controllers.Conferences.viewAsTeacher()
